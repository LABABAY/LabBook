<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.libinyu.book.mapper.StudentMapper">
  <resultMap id="BaseResultMap" type="com.libinyu.book.pojo.Student">
    <id column="student_id" jdbcType="INTEGER" property="student_id" />
    <result column="student_accout" jdbcType="VARCHAR" property="student_accout" />
    <result column="student_name" jdbcType="VARCHAR" property="student_name" />
    <result column="student_sex" jdbcType="VARCHAR" property="student_sex" />
    <result column="student_grade" jdbcType="VARCHAR" property="student_grade" />
    <result column="student_image" jdbcType="VARCHAR" property="student_image" />
    <result column="student_email" jdbcType="VARCHAR" property="student_email" />
    <result column="student_telphone" jdbcType="VARCHAR" property="student_telphone" />
    <result column="student_password" jdbcType="VARCHAR" property="student_password" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    student_id, student_accout, student_name, student_sex, student_grade, student_image, 
    student_email, student_telphone, student_password
  </sql>
  <select id="selectByExample" parameterType="com.libinyu.book.pojo.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where student_id = #{student_id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student
    where student_id = #{student_id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="student_id" keyProperty="student_id" parameterType="com.libinyu.book.pojo.Student" useGeneratedKeys="true">
    insert into student (student_accout, student_name, student_sex, 
      student_grade, student_image, student_email, 
      student_telphone, student_password)
    values (#{student_accout,jdbcType=VARCHAR}, #{student_name,jdbcType=VARCHAR}, #{student_sex,jdbcType=VARCHAR}, 
      #{student_grade,jdbcType=VARCHAR}, #{student_image,jdbcType=VARCHAR}, #{student_email,jdbcType=VARCHAR}, 
      #{student_telphone,jdbcType=VARCHAR}, #{student_password,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="student_id" keyProperty="student_id" parameterType="com.libinyu.book.pojo.Student" useGeneratedKeys="true">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="student_accout != null">
        student_accout,
      </if>
      <if test="student_name != null">
        student_name,
      </if>
      <if test="student_sex != null">
        student_sex,
      </if>
      <if test="student_grade != null">
        student_grade,
      </if>
      <if test="student_image != null">
        student_image,
      </if>
      <if test="student_email != null">
        student_email,
      </if>
      <if test="student_telphone != null">
        student_telphone,
      </if>
      <if test="student_password != null">
        student_password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="student_accout != null">
        #{student_accout,jdbcType=VARCHAR},
      </if>
      <if test="student_name != null">
        #{student_name,jdbcType=VARCHAR},
      </if>
      <if test="student_sex != null">
        #{student_sex,jdbcType=VARCHAR},
      </if>
      <if test="student_grade != null">
        #{student_grade,jdbcType=VARCHAR},
      </if>
      <if test="student_image != null">
        #{student_image,jdbcType=VARCHAR},
      </if>
      <if test="student_email != null">
        #{student_email,jdbcType=VARCHAR},
      </if>
      <if test="student_telphone != null">
        #{student_telphone,jdbcType=VARCHAR},
      </if>
      <if test="student_password != null">
        #{student_password,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.libinyu.book.pojo.Student">
    update student
    <set>
      <if test="student_accout != null">
        student_accout = #{student_accout,jdbcType=VARCHAR},
      </if>
      <if test="student_name != null">
        student_name = #{student_name,jdbcType=VARCHAR},
      </if>
      <if test="student_sex != null">
        student_sex = #{student_sex,jdbcType=VARCHAR},
      </if>
      <if test="student_grade != null">
        student_grade = #{student_grade,jdbcType=VARCHAR},
      </if>
      <if test="student_image != null">
        student_image = #{student_image,jdbcType=VARCHAR},
      </if>
      <if test="student_email != null">
        student_email = #{student_email,jdbcType=VARCHAR},
      </if>
      <if test="student_telphone != null">
        student_telphone = #{student_telphone,jdbcType=VARCHAR},
      </if>
      <if test="student_password != null">
        student_password = #{student_password,jdbcType=VARCHAR},
      </if>
    </set>
    where student_id = #{student_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.libinyu.book.pojo.Student">
    update student
    set student_accout = #{student_accout,jdbcType=VARCHAR},
      student_name = #{student_name,jdbcType=VARCHAR},
      student_sex = #{student_sex,jdbcType=VARCHAR},
      student_grade = #{student_grade,jdbcType=VARCHAR},
      student_image = #{student_image,jdbcType=VARCHAR},
      student_email = #{student_email,jdbcType=VARCHAR},
      student_telphone = #{student_telphone,jdbcType=VARCHAR},
      student_password = #{student_password,jdbcType=VARCHAR}
    where student_id = #{student_id,jdbcType=INTEGER}
  </update>
</mapper>