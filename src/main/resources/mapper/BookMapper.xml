<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.libinyu.book.mapper.BookMapper">
  <resultMap id="BaseResultMap" type="com.libinyu.book.pojo.Book">
    <id column="book_id" jdbcType="INTEGER" property="book_id" />
    <result column="score_id" jdbcType="INTEGER" property="score_id" />
    <result column="lab_id" jdbcType="INTEGER" property="lab_id" />
    <result column="teacher_id" jdbcType="INTEGER" property="teacher_id" />
    <result column="admin_id" jdbcType="INTEGER" property="admin_id" />
    <result column="book_project_title" jdbcType="VARCHAR" property="book_project_title" />
    <result column="book_project_detail" jdbcType="VARCHAR" property="book_project_detail" />
    <result column="book_experiment_date" jdbcType="TIMESTAMP" property="book_experiment_date" />
    <result column="book_human_number" jdbcType="VARCHAR" property="book_human_number" />
    <result column="book_teacher_verify" jdbcType="VARCHAR" property="book_teacher_verify" />
    <result column="book_admin_verify" jdbcType="VARCHAR" property="book_admin_verify" />
    <result column="book_report_score" jdbcType="VARCHAR" property="book_report_score" />
    <result column="book_enter_password" jdbcType="CHAR" property="book_enter_password" />
    <result column="book_enter_date" jdbcType="TIMESTAMP" property="book_enter_date" />
    <result column="book_leave_date" jdbcType="TIMESTAMP" property="book_leave_date" />
    <result column="book_confirm" jdbcType="BIT" property="book_confirm" />
    <result column="book_status" jdbcType="VARCHAR" property="book_status" />
    <result column="book_guide" jdbcType="VARCHAR" property="book_guide" />
    <result column="book_report_task" jdbcType="VARCHAR" property="book_report_task" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    book_id, score_id, lab_id, teacher_id, admin_id, book_project_title, book_project_detail, 
    book_experiment_date, book_human_number, book_teacher_verify, book_admin_verify, 
    book_report_score, book_enter_password, book_enter_date, book_leave_date, book_confirm, 
    book_status, book_guide, book_report_task
  </sql>
  <select id="selectByExample" parameterType="com.libinyu.book.pojo.BookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book
    where book_id = #{book_id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book
    where book_id = #{book_id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="book_id" keyProperty="book_id" parameterType="com.libinyu.book.pojo.Book" useGeneratedKeys="true">
    insert into book (score_id, lab_id, teacher_id, 
      admin_id, book_project_title, book_project_detail, 
      book_experiment_date, book_human_number, 
      book_teacher_verify, book_admin_verify, 
      book_report_score, book_enter_password, book_enter_date, 
      book_leave_date, book_confirm, book_status, 
      book_guide, book_report_task)
    values (#{score_id,jdbcType=INTEGER}, #{lab_id,jdbcType=INTEGER}, #{teacher_id,jdbcType=INTEGER}, 
      #{admin_id,jdbcType=INTEGER}, #{book_project_title,jdbcType=VARCHAR}, #{book_project_detail,jdbcType=VARCHAR}, 
      #{book_experiment_date,jdbcType=TIMESTAMP}, #{book_human_number,jdbcType=VARCHAR}, 
      #{book_teacher_verify,jdbcType=VARCHAR}, #{book_admin_verify,jdbcType=VARCHAR}, 
      #{book_report_score,jdbcType=VARCHAR}, #{book_enter_password,jdbcType=CHAR}, #{book_enter_date,jdbcType=TIMESTAMP}, 
      #{book_leave_date,jdbcType=TIMESTAMP}, #{book_confirm,jdbcType=BIT}, #{book_status,jdbcType=VARCHAR}, 
      #{book_guide,jdbcType=VARCHAR}, #{book_report_task,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="book_id" keyProperty="book_id" parameterType="com.libinyu.book.pojo.Book" useGeneratedKeys="true">
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="score_id != null">
        score_id,
      </if>
      <if test="lab_id != null">
        lab_id,
      </if>
      <if test="teacher_id != null">
        teacher_id,
      </if>
      <if test="admin_id != null">
        admin_id,
      </if>
      <if test="book_project_title != null">
        book_project_title,
      </if>
      <if test="book_project_detail != null">
        book_project_detail,
      </if>
      <if test="book_experiment_date != null">
        book_experiment_date,
      </if>
      <if test="book_human_number != null">
        book_human_number,
      </if>
      <if test="book_teacher_verify != null">
        book_teacher_verify,
      </if>
      <if test="book_admin_verify != null">
        book_admin_verify,
      </if>
      <if test="book_report_score != null">
        book_report_score,
      </if>
      <if test="book_enter_password != null">
        book_enter_password,
      </if>
      <if test="book_enter_date != null">
        book_enter_date,
      </if>
      <if test="book_leave_date != null">
        book_leave_date,
      </if>
      <if test="book_confirm != null">
        book_confirm,
      </if>
      <if test="book_status != null">
        book_status,
      </if>
      <if test="book_guide != null">
        book_guide,
      </if>
      <if test="book_report_task != null">
        book_report_task,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="score_id != null">
        #{score_id,jdbcType=INTEGER},
      </if>
      <if test="lab_id != null">
        #{lab_id,jdbcType=INTEGER},
      </if>
      <if test="teacher_id != null">
        #{teacher_id,jdbcType=INTEGER},
      </if>
      <if test="admin_id != null">
        #{admin_id,jdbcType=INTEGER},
      </if>
      <if test="book_project_title != null">
        #{book_project_title,jdbcType=VARCHAR},
      </if>
      <if test="book_project_detail != null">
        #{book_project_detail,jdbcType=VARCHAR},
      </if>
      <if test="book_experiment_date != null">
        #{book_experiment_date,jdbcType=TIMESTAMP},
      </if>
      <if test="book_human_number != null">
        #{book_human_number,jdbcType=VARCHAR},
      </if>
      <if test="book_teacher_verify != null">
        #{book_teacher_verify,jdbcType=VARCHAR},
      </if>
      <if test="book_admin_verify != null">
        #{book_admin_verify,jdbcType=VARCHAR},
      </if>
      <if test="book_report_score != null">
        #{book_report_score,jdbcType=VARCHAR},
      </if>
      <if test="book_enter_password != null">
        #{book_enter_password,jdbcType=CHAR},
      </if>
      <if test="book_enter_date != null">
        #{book_enter_date,jdbcType=TIMESTAMP},
      </if>
      <if test="book_leave_date != null">
        #{book_leave_date,jdbcType=TIMESTAMP},
      </if>
      <if test="book_confirm != null">
        #{book_confirm,jdbcType=BIT},
      </if>
      <if test="book_status != null">
        #{book_status,jdbcType=VARCHAR},
      </if>
      <if test="book_guide != null">
        #{book_guide,jdbcType=VARCHAR},
      </if>
      <if test="book_report_task != null">
        #{book_report_task,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.libinyu.book.pojo.Book">
    update book
    <set>
      <if test="score_id != null">
        score_id = #{score_id,jdbcType=INTEGER},
      </if>
      <if test="lab_id != null">
        lab_id = #{lab_id,jdbcType=INTEGER},
      </if>
      <if test="teacher_id != null">
        teacher_id = #{teacher_id,jdbcType=INTEGER},
      </if>
      <if test="admin_id != null">
        admin_id = #{admin_id,jdbcType=INTEGER},
      </if>
      <if test="book_project_title != null">
        book_project_title = #{book_project_title,jdbcType=VARCHAR},
      </if>
      <if test="book_project_detail != null">
        book_project_detail = #{book_project_detail,jdbcType=VARCHAR},
      </if>
      <if test="book_experiment_date != null">
        book_experiment_date = #{book_experiment_date,jdbcType=TIMESTAMP},
      </if>
      <if test="book_human_number != null">
        book_human_number = #{book_human_number,jdbcType=VARCHAR},
      </if>
      <if test="book_teacher_verify != null">
        book_teacher_verify = #{book_teacher_verify,jdbcType=VARCHAR},
      </if>
      <if test="book_admin_verify != null">
        book_admin_verify = #{book_admin_verify,jdbcType=VARCHAR},
      </if>
      <if test="book_report_score != null">
        book_report_score = #{book_report_score,jdbcType=VARCHAR},
      </if>
      <if test="book_enter_password != null">
        book_enter_password = #{book_enter_password,jdbcType=CHAR},
      </if>
      <if test="book_enter_date != null">
        book_enter_date = #{book_enter_date,jdbcType=TIMESTAMP},
      </if>
      <if test="book_leave_date != null">
        book_leave_date = #{book_leave_date,jdbcType=TIMESTAMP},
      </if>
      <if test="book_confirm != null">
        book_confirm = #{book_confirm,jdbcType=BIT},
      </if>
      <if test="book_status != null">
        book_status = #{book_status,jdbcType=VARCHAR},
      </if>
      <if test="book_guide != null">
        book_guide = #{book_guide,jdbcType=VARCHAR},
      </if>
      <if test="book_report_task != null">
        book_report_task = #{book_report_task,jdbcType=VARCHAR},
      </if>
    </set>
    where book_id = #{book_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.libinyu.book.pojo.Book">
    update book
    set score_id = #{score_id,jdbcType=INTEGER},
      lab_id = #{lab_id,jdbcType=INTEGER},
      teacher_id = #{teacher_id,jdbcType=INTEGER},
      admin_id = #{admin_id,jdbcType=INTEGER},
      book_project_title = #{book_project_title,jdbcType=VARCHAR},
      book_project_detail = #{book_project_detail,jdbcType=VARCHAR},
      book_experiment_date = #{book_experiment_date,jdbcType=TIMESTAMP},
      book_human_number = #{book_human_number,jdbcType=VARCHAR},
      book_teacher_verify = #{book_teacher_verify,jdbcType=VARCHAR},
      book_admin_verify = #{book_admin_verify,jdbcType=VARCHAR},
      book_report_score = #{book_report_score,jdbcType=VARCHAR},
      book_enter_password = #{book_enter_password,jdbcType=CHAR},
      book_enter_date = #{book_enter_date,jdbcType=TIMESTAMP},
      book_leave_date = #{book_leave_date,jdbcType=TIMESTAMP},
      book_confirm = #{book_confirm,jdbcType=BIT},
      book_status = #{book_status,jdbcType=VARCHAR},
      book_guide = #{book_guide,jdbcType=VARCHAR},
      book_report_task = #{book_report_task,jdbcType=VARCHAR}
    where book_id = #{book_id,jdbcType=INTEGER}
  </update>
</mapper>